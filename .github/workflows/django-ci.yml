name: Django CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: sanjana
          POSTGRES_DB: Book_Djangodb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install psycopg2

    - name: Set Environment Variables
      run: echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> $GITHUB_ENV
      env:
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}

    - name: Apply Migrations
      env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: sanjana
        POSTGRES_DB: Book_Djangodb
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/Book_Djangodb
      run: python3 manage.py migrate

    - name: Run the Server
      env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: sanjana
        POSTGRES_DB: Book_Djangodb
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/Book_Djangodb
      run: |
        nohup python3 manage.py runserver 0.0.0.0:8000 &
        sleep 5 # Allow server to start

    - name: Run Tests
      env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: sanjana
        POSTGRES_DB: Book_Djangodb
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/Book_Djangodb
      run: python3 manage.py test

    - name: Collect Static Files (Optional for Deployment)
      run: python manage.py collectstatic --noinput
